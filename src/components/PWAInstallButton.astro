---
// This component handles the PWA installation prompt

// Define the BeforeInstallPromptEvent type
interface BeforeInstallPromptEvent extends Event {
  readonly platforms: string[];
  readonly userChoice: Promise<{
    outcome: 'accepted' | 'dismissed';
    platform: string;
  }>;
  prompt(): Promise<void>;
}

declare global {
  interface Window {
    deferredPrompt?: BeforeInstallPromptEvent;
  }
}
---

<div id="installButtonContainer" class="fixed bottom-6 right-6 z-50" style="display: none;">
  <div class="relative">
    <!-- Pulsing circle -->
    <div class="absolute inset-0 bg-blue-500 rounded-full opacity-75 animate-ping"></div>
    
    <!-- Main button -->
    <button 
      id="installButton"
      class="relative bg-gradient-to-r from-blue-600 to-blue-500 hover:from-blue-700 hover:to-blue-600 text-white font-bold py-4 px-6 rounded-full shadow-xl transition-all duration-300 transform hover:scale-105 focus:outline-none focus:ring-4 focus:ring-blue-400 focus:ring-opacity-50 flex items-center gap-3 border-2 border-white"
      aria-label="Install TaskFlow app"
    >
      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" viewBox="0 0 20 20" fill="currentColor">
        <path fill-rule="evenodd" d="M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z" clip-rule="evenodd" />
      </svg>
      <span class="text-lg font-semibold">Install App</span>
    </button>
    
    <!-- Tooltip -->
    <div id="installTooltip" class="absolute right-0 bottom-full mb-3 hidden">
      <div class="bg-gray-800 text-white text-sm px-3 py-2 rounded-lg shadow-lg whitespace-nowrap">
        Add to Home Screen
        <div class="absolute top-full right-4 w-0 h-0 border-l-4 border-l-transparent border-r-4 border-r-transparent border-t-4 border-t-gray-800"></div>
      </div>
    </div>
  </div>
</div>

<script>
  // Check if the browser supports PWA installation
  if ('serviceWorker' in navigator && 'BeforeInstallPromptEvent' in window) {
    let deferredPrompt: BeforeInstallPromptEvent | null = null;
    const installButton = document.getElementById('installButton');

    if (!installButton) {
      console.error('Install button not found');
      return;
    }

    // Show the install button when the app can be installed
    window.addEventListener('beforeinstallprompt', (e) => {
      // Prevent the default prompt
      e.preventDefault();
      // Stash the event so it can be triggered later
      deferredPrompt = e as BeforeInstallPromptEvent;
      // Show the install button container
      const container = document.getElementById('installButtonContainer');
      if (container) {
        container.style.display = 'block';
        // Add animation class
        container.classList.add('animate-bounce');
        // Remove animation after it completes
        setTimeout(() => {
          container.classList.remove('animate-bounce');
        }, 2000);
      }
    });

    // Handle the install button click
    installButton.addEventListener('click', async () => {
      if (!deferredPrompt) return;
      
      try {
        // Show the install prompt
        deferredPrompt.prompt();
        
        // Wait for the user to respond to the prompt
        const { outcome } = await deferredPrompt.userChoice;
        console.log(`User response to the install prompt: ${outcome}`);
      } catch (error) {
        console.error('Error showing install prompt:', error);
      } finally {
        // We've used the prompt, and can't use it again, throw it away
        deferredPrompt = null;
        
        // Hide the install button
        installButton.style.display = 'none';
      }
    });

    // Hide the install button once the app is installed
    window.addEventListener('appinstalled', () => {
      console.log('PWA was installed');
      if (installButton) {
        installButton.style.display = 'none';
      }
      deferredPrompt = null;
    });
  }
</script>
