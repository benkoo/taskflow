---
// Import components
import PWAInstallButton from '../components/pwa/InstallButton.astro';
import PWAProvider from '../components/pwa/PWAProvider.astro';

// Define props type
interface Props {
  title?: string;
}

// Extract props
const { title = 'TaskFlow - Your Personal Task Manager' } = Astro.props as Props;

// Extend the Navigator interface to include standalone
declare global {
  interface Navigator {
    standalone?: boolean;
  }
}
---

<!DOCTYPE html>
<html lang="en" class="h-full">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <meta name="description" content="TaskFlow - A beautiful and intuitive task management PWA" />
    <meta name="theme-color" content="#3b82f6" />
    <meta name="format-detection" content="telephone=no" />
    
    <!-- PWA Manifest -->
    <link rel="manifest" href="/manifest.json" />
    
    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="alternate icon" href="/favicon.ico" />
    <link rel="apple-touch-icon" href="/icons/icon-192x192.png" />
    
    <!-- PWA Meta Tags -->
    <meta name="application-name" content="TaskFlow" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
    <meta name="apple-mobile-web-app-title" content="TaskFlow" />
    <meta name="mobile-web-app-capable" content="yes" />
    <meta name="msapplication-TileColor" content="#3b82f6" />
    <meta name="msapplication-tap-highlight" content="no" />
    
    <!-- Service Worker is registered by ServiceWorkerHandler component -->
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content="TaskFlow - A beautiful and intuitive task management PWA" />
    <meta property="og:site_name" content="TaskFlow" />
    <meta property="og:url" content="https://your-app-url.com" />
    <meta property="og:image" content="/images/og-image.jpg" />
    
    <!-- Twitter -->
    <meta name="twitter:card" content="summary" />
    <meta name="twitter:url" content="https://your-app-url.com" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content="TaskFlow - A beautiful and intuitive task management PWA" />
    <meta name="twitter:image" content="/images/twitter-image.jpg" />
    <meta name="twitter:creator" content="@yourtwitter" />
    
    <title>{title}</title>
    
    <!-- Preconnect to external resources -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link 
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" 
      rel="stylesheet" 
    />
    
    <!-- Global CSS -->
    <link rel="stylesheet" href="/styles/global.css" />
  </head>
  <body class="min-h-screen bg-gray-50 text-gray-900 dark:bg-gray-900 dark:text-gray-100 transition-colors duration-200">
    <div class="min-h-screen flex flex-col">
      <main class="flex-1">
        <slot />
      </main>
    </div>
    
    <!-- PWA Provider - Handles service worker registration and PWA features -->
    <PWAProvider>
      <!-- PWA Install Button -->
      <PWAInstallButton />
    </PWAProvider>
    
    <script>
      // Add a class to the html element if JavaScript is enabled
      document.documentElement.classList.add('js');
      
      // Initialize theme (dark/light mode)
      function initTheme() {
        const theme = localStorage.getItem('theme') || 'system';
        const isDark = theme === 'dark' || 
                     (theme === 'system' && window.matchMedia('(prefers-color-scheme: dark)').matches);
        
        if (isDark) {
          document.documentElement.classList.add('dark');
        } else {
          document.documentElement.classList.remove('dark');
        }
      }
      
      // Run theme initialization when the DOM is fully loaded
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initTheme);
      } else {
        initTheme();
      }
      
      // Listen for system theme changes
      window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', initTheme);
    </script>
  </body>
</html>
